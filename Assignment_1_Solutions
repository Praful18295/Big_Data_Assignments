## Assignment Part-1
Q1. Why do we call Python as a general purpose and high-level programming language?

Python is called general purpose as this can be used to create different programs & as its easy to understand byy humans its called high-level programming lanuage


Q2. Why is Python called a dynamically typed language?

Python is called dynamically typed language because the type of the variable is determined only during runtime


Q3. List some pros and cons of Python programming language?

Pros - Easy to lean , lots of libereries are present to use , easy to interpreat , & its open source 

Cons - Slow , its can have run time error , not strong for mobile computing



Q4. In what all domains can we use Python?

Data science , Machine Learning, Deep Learning , AI



Q5. What are variable and how can we declare them?

Variables are the basic unit of storage in a programming language. These variables consist of a data type, the variable name, and the value to be assigned to the variable. Unless and until the variables are declared and initialized, they cannot be used in the program



Q6. How can we take an input from the user in Python?

By using input() Function 



Q7. What is the default datatype of the value that has been taken as an input using input() function?

string 

Q8. What is type casting?

To convert one type of data to another i.e - input() function's by default data type is str this can be converted to int as int(input()). 



Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why?

Yes, this can be done by spliting inputs with .split() function with input() function , we can also  use map with split the inpts into a list.



Q10. What are keywords?

Python keywords are special reserved words that have specific meanings and purposes and can't be used for anything but those specific purposes.

Q11. Can we use keywords as a variable? Support your answer with reason.

NO, 

Q12. What is indentation? What's the use of indentaion in Python?

Indentation is python is givin by 4 space ot a tab - this shows  block of code.

Q13. How can we throw some output in Python?

We can use print() command to give output or return function



Q14. What are operators in Python?

operators are special symbols that designate that some sort of computation should be performed.



Q15. What is difference between / and // operators?

/ provides divison value in float & // provides division value in integer.



Q16. Write a code that gives following as an output.
```
iNeuroniNeuroniNeuroniNeuron
```

print("iNeuroniNeuroniNeuroniNeuron")

Q17. Write a code to take a number as an input from the user and check if the number is odd or even.

a = int(input("Enter a num "))

if a%2==0:
    print("No is even")
else:
    print("No is odd")

Q18. What are boolean operator?



Boolean Operators are simple words (AND, OR, NOT or AND NOT) used as conjunctions to combine or exclude keywords in a search, resulting in more focused and productive results. This should save time and effort by eliminating inappropriate hits that must be scanned before discarding.



Q19. What will the output of the following?
```
1 or 0

0 and 0

True and False and True

1 or 0 or 0


```

1
0
False
1

Q20. What are conditional statements in Python?

 Conditional statements are used to handle conditions in your program. These statements guide the program while making decisions based on the conditions encountered by the program - if, else-if , nested-if.



Q21. What is use of 'if', 'elif' and 'else' keywords?

if - The if condition is considered the simplest of the three and makes a decision based on whether the condition is true or not. If the condition is true, it prints out the indented expression. If the condition is false, it skips printing the indented expression.

elif- The if-else condition adds an additional step in the decision-making process compared to the simple if statement. The beginning of an if-else statement operates similar to a simple if statement; however, if the condition is false, instead of printing nothing, the indented expression under else will be printed.

else - this statement execute when both if & elif statemts are failed.



Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote".

Age = int(input("Enter your age"))

if Age>18:
    print("I can vote")
else:
    print("I can't vote")
    

Q23. Write a code that displays the sum of all the even numbers from the given list.
```
numbers = [12, 75, 150, 180, 145, 525, 50]

```
numbers = [12, 75, 150, 180, 145, 525, 50]

l = []

for x in numbers:
    if x%2==0:
        l.append(x)
s = l.sum()
print("sum of num is ",s)



Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output.

num1 = int(input(Enter 1st  number: "))
num2 = int(input(Enter 2nd  number: "))
num3 = int(input(Enter 3rd  number: "))

numbers = [num1 , num 2, num 3]

print(max(numbers)



Q25. Write a program to display only those numbers from a list that satisfy the following conditions

- The number must be divisible by five

- If the number is greater than 150, then skip it and move to the next number

- If the number is greater than 500, then stop the loop
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
numbers = [12, 75, 150, 180, 145, 525, 50]


n = []

for i in numbers:
    if i > 150:
        if i > 500:
            break
        continue
    if i % 5 == 0:
        b.append(i)
        
print(b)
    

Q26. What is a string? How can we declare string in Python?

Strings is a series of characters. In Python, anything inside quotes is a string. And we can use either single or double quotes. For example: message = 'This is a string in Python' message = "This is also a string"



Q27. How can we access the string using its index?

Individual characters in a string can be accessed by specifying the string name followed by a number in square brackets ( [] ).



Q28. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "iNeuron"
```
string = "Big Data iNeuron"
print(string[-7:0])



Q29. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "norueNi"
```
string = "Big Data iNeuron"
print(string[::-1])


Q30. Resverse the string given in the above question.

string = "Big Data iNeuron"
print(string[::-1])

Q31. How can you delete entire string at once?

By Del command ex - Del string 

Q32. What is escape sequence?

An escape sequence is a sequence of characters that, when used inside a character or string, does not represent itself but is converted into another character or series of characters



Q33. How can you print the below string?
```
'iNeuron's Big Data Course'
```

Print('iNeuron's Big Data Course')

Q34. What is a list in Python?

> List is one of the Sequence Data structure

-> Lists are collection of items (Strings, integers or even other lists)

-> Lists are enclosed in [ ]

-> Each item in the list has an assigned index value.

-> Each item in a list is separated by a comma

-> Lists are mutable, which means they can be changed.

Q35. How can you create a list in Python?

In Python, a list is created by placing elements inside square brackets [] , separated by commas. A list can have any number of items and they may be of different types (integer, float, string, etc.).

List = [ 1,2,3]

Q36. How can we access the elements in a list?

The syntax for accessing the elements of a list is the same as the syntax for accessing the characters of a string. We use the index operator ( [] â€“ not to be confused with an empty list). The expression inside the brackets specifies the index



Q37. Write a code to access the word "iNeuron" from the given list.
```
lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
``` 
lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]

print(lst[4][2])


Q38. Take a list as an input from the user and find the length of the list.

x = int(input("Enter your name "))

len(x)

Q39. Add the word "Big" in the 3rd index of the given list.
```
lst = ["Welcome", "to", "Data", "course"]
```
lst = ["Welcome", "to", "Data", "course"]

lst.insert(2,"Big")


Q40. What is a tuple? How is it different from list?

-> A tuple is similar to list

-> The diffence between the two is that we can't change the elements of tuple once it is assigned whereas in the list, elements can be changed

Q41. How can you create a tuple in Python?

A tuple is created by placing all the items (elements) inside parentheses () , separated by commas. The parentheses are optional, however, it is a good practice to use them.


Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason.

Since tuple is immutable we won't be able to ammend it

Q43. Can two tuple be appended. If yes, write a code for it. If not, why?

No, tuple is immutable we can't append them.

Q44. Take a tuple as an input and print the count of elements in it.

my_tuple = tuple(input('Enter space-separated words: ').split())

print(my_tuple)



Q45. What are sets in Python?

> A set is an unordered collection of items. Every element is unique (no duplicates).

-> The set itself is mutable. We can add or remove items from it.

-> Sets can be used to perform mathematical set operations like union, intersection, symmetric difference etc.

Q46. How can you create a set?

A set is created by placing all the items (elements) inside curly braces {} , separated by comma, or by using the built-in set() function

Q47. Create a set and add "iNeuron" in your set.

s = set()

s.add("iNeuron")
print(s)



Q48. Try to add multiple values using add() function.

s.update(["Big_data", "Data_Science","Machine_Learning"])
print(s)

Q49. How is update() different from add()?

By update we can add multiple values & with add we can add only single value at a time.

Q50. What is clear() in sets?

Clear is used to remove all items in set using clear() method

Q51. What is frozen set?

Frozen sets has the characteristics of sets, but we can't be changed once it's assigned. While tuple are immutable lists, frozen sets are immutable sets

Frozensets can be created using the function frozenset()

Q52. How is frozen set different from set?

Sets being mutable are unhashable, so they can't be used as dictionary keys. On the other hand, frozensets are hashable and can be used as keys to a dictionary.

Q53. What is union() in sets? Explain via code.

The union() method returns a set that contains all items from the original set, and all items from the specified set(s)

Q54. What is intersection() in sets? Explain via code.

The intersection() method returns a set that contains the similarity between two or more sets

set1 = set{1,2,3,4}

set2 = set{2,4}

result = x.intersection(set1, set2)

print(result)

output - {2,4}



Q55. What is dictionary ibn Python?

Python dictionary is an unordered collection of items. While other compound data types have only value as an element, a dictionary has a key: value pair.

Q56. How is dictionary different from all other data structures.

Dictionary accepts vales in a form of key:value pairs .

Q57. How can we delare a dictionary in Python?

A Dictionary in python is declared by enclosing a comma-separated list of key-value pairs using curly braces({}). Python Dictionary is classified into two elements: Keys and Values. Values can be a list or list within a list, numbers, etc.


Q58. What will the output of the following?
```
var = {}
print(type(var))
```

<type 'dict'>

Q59. How can we add an element in a dictionary?

We add a new element to the dictionary by using a new key as a subscript and assigning it a value


Q60. Create a dictionary and access all the values in that dictionary.

my_dict = {1: 'abc', 2: 'xyz'}
print(my_dict)


Q61. Create a nested dictionary and access all the element in the inner dictionary.

my_dict = {'name': 'satish', 1: ['abc', 'xyz']}
print(my_dict)

Q62. What is the use of get() function?

gets() is a pre-defined function in C which is used to read a string or a text lin



Q63. What is the use of items() function?

The items() method returns a view object. The view object contains the key-value pairs of the dictionary, as tuples in a list.

Q64. What is the use of pop() function?

The pop() method removes the last element from an array and returns that element.

Q65. What is the use of popitems() function?

The popitem() method removes the item that was last inserted into the dictionary

Q66. What is the use of keys() function?

The keys() method returns a view object. The view object contains the keys of the dictionary, as a list



Q67. What is the use of values() function?

The values() method returns a view object. The view object contains the values of the dictionary, as a list



Q68. What are loops in Python?

Looping means repeating something over and over until a particular condition is satisfied. A for loop in Python is a control flow statement that is used to repeatedly execute a group of statements as long as the condition is satisfied. Such a type of statement is also known as an iterative statement



Q69. How many type of loop are there in Python?

Two Types - For loop & While loop



Q70. What is the difference between for and while loops?

The for and while loops are both conditional statements. A for loop is a single-line command that will be executed repeatedly. While loops can be single-lined or contain multiple commands for a single condition. Both the for loop and the while loop are important in computer languages for obtaining results.


Q71. What is the use of continue statement?

A continue statement ends the current iteration of a loop. Program control is passed from the continue statement to the end of the loop body. A continue statement can only appear within the body of an iterative statement, such as do , for , or while .



Q72. What is the use of break statement?

The break statement is frequently used to terminate the processing of a particular case within a switch statement


Q73. What is the use of pass statement?

The pass statement is used as a placeholder for future code. When the pass statement is executed, nothing happens, but you avoid getting an error when empty code is not allowed. Empty code is not allowed in loops, function definitions, class definitions, or in if statements

Q74. What is the use of range() function?

The range() function returns a sequence of numbers, starting from 0 by default, and increments by 1 (by default), and stops before a specified number.

Q75. How can you loop over a dictionary?

We can loop through a dictionary by using a for loop. When looping through a dictionary, the return value are the keys of the dictionary, but there are methods to return the values as well.




### Coding problems
Q76. Write a Python program to find the factorial of a given number.

num = int(input("Enter a number : "))
fact = 1

if num<0:
    print("Factorial does not exits for negative number")
    
elif num==0:
    print("factorial of 0 is 1")
    
else:    
    for i in range(1,num+1):
        fact=fact*i
    print("Factorial of ",num," is ",fact)

Q77. Write a Python program to calculate the simple interest. Formula to calculate simple interest is SI = (P*R*T)/100

p =int(input("Enter Princical anount :"))
r =float(input("Enter Annual rate :"))
t =int(input("Enter Time :"))

s = (p*t*r)/100

print("Interest is :",s)

Q78. Write a Python program to calculate the compound interest. Formula of compound interest is A = P(1+ R/100)^t.

p =int(input("Enter Princical anount :"))
r =int(input("Enter Annual rate :"))
t =int(input("Enter Time :"))

Si = p*(1+r/100**t)   # note computer does understand p(1+r/100)  pls specify p*(1+r/100)

print("Interest is :",Si)

Q79. Write a Python program to check if a number is prime or not.

n = int(input("Enter a number :"))

for i in (2,n):   # 1 not taken since every no is divisle by 1
    r = n%i
    if r==0:
        print(f"The number {n} is not prime no.")
        break
    else:
        print(f"The number {n} is Prime no")
        break

Q80. Write a Python program to check Armstrong Number.

n = int(input("Enter a number :"))
c=0
while n!=0:
    n=n//10
    c+=1

p=0

while n!=0:
    r=n%10
    p=p+r**c
    n=n//10

if n==p :
    print("Aramstrong no")
else:
    print("Not a Aramstrong no")

Q81. Write a Python program to find the n-th Fibonacci Number.

n = int(input("Enter a febonacci number :"))

if n==1:
    f1=0
    print(f1)
    
elif n==2:
    f2=1
    print(f2)
  
else:
    f1=0
    f2=1

for i in range (2,n):
    f3=f1+f2
    f1=f2
    f2=f3
print(f3)

Q82. Write a Python program to interchange the first and last element in a list.

num1 = 10
num2 = 20
temp = 0
print("My num befor swap are num1 is ",num1," & num2 is ",num2)
temp=num2
num2=num1
num1=temp
temp = 0
print("My num after swap are num1 is ",num1," & num2 is ",num2)

Q83. Write a Python program to swap two elements in a list.

num1 = 10
num2 = 20
temp = 0
print("My num befor swap are num1 is ",num1," & num2 is ",num2)
temp=num2
num2=num1
num1=temp
temp = 0
print("My num after swap are num1 is ",num1," & num2 is ",num2)



Q84. Write a Python program to find N largest element from a list.

a = int(input("Enter 1st  numnumber :"))
b = int(input("Enter 2nd  numnumber :"))
c = int(input("Enter 3rd  numnumber :"))

def max(a,b,c):
    if a>b and a>c:
        print("Maximum is ",a)  # we need to provide return here
    elif b>a and b>c:
        print("Maximum is ",b)
    else:
        print("Maximum is ",c)
        
ans = max(a,b,c)
print(f"The max number is {ans}")

Q85. Write a Python program to find cumulative sum of a list.

def sum(l):
    a=(n1+n2+n3+n4+n5)
    print(f"Sum is {a}")
    


n1 = int(input("Enter 1st  numnumber :"))
n2 = int(input("Enter 2nd  numnumber :"))
n3 = int(input("Enter 3rd  numnumber :"))
n4 = int(input("Enter 4th  numnumber :"))
n5 = int(input("Enter 5th  numnumber :"))

l = [n1,n2,n3,n4,n5]

sum(l)

Q86. Write a Python program to check if a string is palindrome or not.

n = int(input("Enter a number :"))
p=0
c=n
while c!=0:
    r=c%10
    p=p*10+r
    c=c//10

if n==p:
    print(f"Number {n} is a palindrome.")
else:
    print(f"Number {n} is a not palindrome.")

Q87. Write a Python program to remove i'th element from a string.

test_str = "Big Data"
 

new_str = ""
 
for i in range(len(test_str)):
    if i != 2:
        new_str = new_str + test_str[i]

print ("The string after removal of i'th character : " + new_str)



Q88. Write a Python program to check if a substring is present in a given string.

String = "This is a big data course "
 
if "big" in String:
    print("Yes! it is present in the string")
else:
    print("No! it is not present")



Q89. Write a Python program to find words which are greater than given length k.

def word_k(k, s):    
    
    word = s.split(" ")
    
    for x in word:
        
        if len(x)> k:
          
           print(x)

k = 3

s ="Python is good"

word_k(k, s)



Q90. Write a Python program to extract unquire dictionary values

myDict = {'Scala': 2, 'Javascript': 1, 'Python': 8, 'C++': 1, 'Java': 4}

uniqueValues = list({val for val in myDict.values() })
  

print("Dictionary = ", end = " ")
print(myDict)
print("Unique Values = ", end = " ")
print(uniqueValues)


Q91. Write a Python program to merge two dictionary.

dict_1 = {1: 'a', 2: 'b'}
dict_2 = {2: 'c', 4: 'd'}

dict_3 = dict_2.copy()
dict_3.update(dict_1)

print(dict_3)



Q92. Write a Python program to convert a list of tuples into dictionary.
```
Input : [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
Output : {'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}
```

def Convert(tup, di):
    for a, b in tup:
        di.setdefault(a, []).append(b)
    return di
      
   
tups = [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
dictionary = {}
print (Convert(tups, dictionary))



Q93. Write a Python program to create a list of tuples from given list having number and its cube in each tuple.
```
Input: list = [9, 5, 6]
Output: [(9, 729), (5, 125), (6, 216)]
```

list = [9, 5, 6]
 
res = [(val, pow(val, 3)) for val in list]
 
print(res)

Q94. Write a Python program to get all combinations of 2 tuples.
```
Input : test_tuple1 = (7, 2), test_tuple2 = (7, 8)
Output : [(7, 7), (7, 8), (2, 7), (2, 8), (7, 7), (7, 2), (8, 7), (8, 2)]
```

tuple1 = (7, 2)
tuple2 = (7, 8)

print("The tuple 1 : " + str(tuple1))
print("The tuple 2 : " + str(tuple2))

result =  [(x, y) for x in tuple1 for y in tuple2]
result = result +  [(x, y) for x in tuple2 for y in tuple1]

print("The resultant tuple : " + str(result))


Q95. Write a Python program to sort a list of tuples by second item.
```
Input : [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
Output : [('Geeks', 8), ('for', 24), ('Geeks', 30)]
```

tup = [('for', 24), ('Geeks', 8), ('Geeks', 30)]

def Sort_Tuple(tup):

    tup.sort(key = lambda x: x[1])
    return tup
    
print(Sort_Tuple(tup))
    
    
Q96. Write a python program to print below pattern.
```
* 
* * 
* * * 
* * * * 
* * * * * 
```

for i in range (1,6):
    for j in range(0,i):
        print("*",end=" ")
    print(" ")


Q97. Write a python program to print below pattern.
```
    *
   **
  ***
 ****
*****
```

n=5;i=0
while(i<=n):
  print(" " * (n - i) +"*" * i)
  i+=1


Q98. Write a python program to print below pattern.
```
    * 
   * * 
  * * * 
 * * * * 
* * * * * 
```

size = 5
m = (2 * size) - 2
for i in range(0, size):
    for j in range(0, m):
        print(end=" ")
    # decrementing m after each loop
    m = m - 1
    for j in range(0, i + 1):
        print("* ", end=' ')
    print(" ")

Q99. Write a python program to print below pattern.
```
1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5
```

rows = 5
for i in range(1, rows + 1):
    for j in range(1, i + 1):
        print(j, end=' ')
    print('')

Q100. Write a python program to print below pattern.
```
A 
B B 
C C C 
D D D D 
E E E E E 
```

word = "ABCDE"
x = ""
for i in word:
    x += i
    print(x)
